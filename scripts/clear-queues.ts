#!/usr/bin/env npx ts-node
/**
 * CLI —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –æ—á–µ—Ä–µ–¥–µ–π –∏ —Å–±—Ä–æ—Å–∞ –∑–∞—Å—Ç—Ä—è–≤—à–∏—Ö –∑–∞–¥–∞—á
 *
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * npm run clear-queues
 * –∏–ª–∏
 * npx ts-node scripts/clear-queues.ts
 */

import {
  fullCleanup,
  clearAllQueues,
  resetStuckGenerations,
  getQueuesStats,
  cleanStuckTasks,
} from '../src/utils/queue-cleanup';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
require('dotenv').config();

async function main() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —É—Ç–∏–ª–∏—Ç—ã –æ—á–∏—Å—Ç–∫–∏ –æ—á–µ—Ä–µ–¥–µ–π...\n');

  const args = process.argv.slice(2);
  const command = args[0] || 'full';

  try {
    switch (command) {
      case 'stats':
        console.log('üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—á–µ—Ä–µ–¥–µ–π...');
        const stats = await getQueuesStats();
        console.log('\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—á–µ—Ä–µ–¥–µ–π:');
        console.log(JSON.stringify(stats, null, 2));
        break;

      case 'auto':
        const maxAge = parseInt(args[1]) || 30;
        console.log(`üïê –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–∏—Å—à–∏—Ö –∑–∞–¥–∞—á (—Å—Ç–∞—Ä—à–µ ${maxAge} –º–∏–Ω—É—Ç)...`);
        await cleanStuckTasks(maxAge);
        break;

      case 'queues':
        console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Ç–æ–ª—å–∫–æ Redis –æ—á–µ—Ä–µ–¥–µ–π...');
        await clearAllQueues();
        break;

      case 'db':
        console.log('üîÑ –°–±—Ä–æ—Å —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç—É—Å–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
        await resetStuckGenerations();
        break;

      case 'full':
      default:
        console.log('üéØ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (–æ—á–µ—Ä–µ–¥–∏ + –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö)...');
        await fullCleanup();
        break;
    }

    console.log('\n‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('\nüìä –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    const finalStats = await getQueuesStats();
    console.log(JSON.stringify(finalStats, null, 2));
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏:', error);
    process.exit(1);
  }

  process.exit(0);
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–∫—É
if (process.argv.includes('--help') || process.argv.includes('-h')) {
  console.log(`
üîß –£—Ç–∏–ª–∏—Ç–∞ –æ—á–∏—Å—Ç–∫–∏ –æ—á–µ—Ä–µ–¥–µ–π

–ö–æ–º–∞–Ω–¥—ã:
  full    - –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é): –æ—á–∏—Å—Ç–∫–∞ –æ—á–µ—Ä–µ–¥–µ–π + —Å–±—Ä–æ—Å —Å—Ç–∞—Ç—É—Å–æ–≤ –≤ –ë–î
  queues  - –û—á–∏—Å—Ç–∫–∞ —Ç–æ–ª—å–∫–æ Redis –æ—á–µ—Ä–µ–¥–µ–π
  db      - –°–±—Ä–æ—Å —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç—É—Å–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
  stats   - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—á–µ—Ä–µ–¥–µ–π –±–µ–∑ –æ—á–∏—Å—Ç–∫–∏
  auto    - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–∏—Å—à–∏—Ö –∑–∞–¥–∞—á (—Å—Ç–∞—Ä—à–µ N –º–∏–Ω—É—Ç)

–ü—Ä–∏–º–µ—Ä—ã:
  npm run clear-queues           # –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
  npm run clear-queues stats     # –¢–æ–ª—å–∫–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  npm run clear-queues queues    # –¢–æ–ª—å–∫–æ –æ—á–µ—Ä–µ–¥–∏
  npm run clear-queues db        # –¢–æ–ª—å–∫–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
  npm run clear-queues auto      # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–¥–∞—á —Å—Ç–∞—Ä—à–µ 30 –º–∏–Ω—É—Ç
  npm run clear-queues auto 15   # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–¥–∞—á —Å—Ç–∞—Ä—à–µ 15 –º–∏–Ω—É—Ç
`);
  process.exit(0);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º main —Ñ—É–Ω–∫—Ü–∏—é
main().catch(console.error);
